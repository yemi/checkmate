// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Exists = require("../Data.Exists");
var Data_ExistsR = require("../Data.ExistsR");
var Data_Maybe = require("../Data.Maybe");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var Halogen_HTML_Events_Handler = require("../Halogen.HTML.Events.Handler");
var Halogen_HTML_Events_Types = require("../Halogen.HTML.Events.Types");
var TagName = function (x) {
    return x;
};
var PropName = function (x) {
    return x;
};
var Namespace = function (x) {
    return x;
};
var EventName = function (x) {
    return x;
};
var HandlerF = (function () {
    function HandlerF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    HandlerF.create = function (value0) {
        return function (value1) {
            return new HandlerF(value0, value1);
        };
    };
    return HandlerF;
})();
var ClassName = function (x) {
    return x;
};
var AttrName = function (x) {
    return x;
};
var PropF = (function () {
    function PropF(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    PropF.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new PropF(value0, value1, value2);
            };
        };
    };
    return PropF;
})();
var Prop = (function () {
    function Prop(value0) {
        this.value0 = value0;
    };
    Prop.create = function (value0) {
        return new Prop(value0);
    };
    return Prop;
})();
var Attr = (function () {
    function Attr(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Attr.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Attr(value0, value1, value2);
            };
        };
    };
    return Attr;
})();
var Key = (function () {
    function Key(value0) {
        this.value0 = value0;
    };
    Key.create = function (value0) {
        return new Key(value0);
    };
    return Key;
})();
var Handler = (function () {
    function Handler(value0) {
        this.value0 = value0;
    };
    Handler.create = function (value0) {
        return new Handler(value0);
    };
    return Handler;
})();
var Ref = (function () {
    function Ref(value0) {
        this.value0 = value0;
    };
    Ref.create = function (value0) {
        return new Ref(value0);
    };
    return Ref;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Element = (function () {
    function Element(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Element.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Element(value0, value1, value2, value3);
                };
            };
        };
    };
    return Element;
})();
var Slot = (function () {
    function Slot(value0) {
        this.value0 = value0;
    };
    Slot.create = function (value0) {
        return new Slot(value0);
    };
    return Slot;
})();
var IsProp = function (toPropString) {
    this.toPropString = toPropString;
};
var toPropString = function (dict) {
    return dict.toPropString;
};
var tagName = TagName;
var stringIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (s) {
            return s;
        };
    };
});
var runTagName = function (v) {
    return v;
};
var runPropName = function (v) {
    return v;
};
var runNamespace = function (v) {
    return v;
};
var runEventName = function (v) {
    return v;
};
var runClassName = function (v) {
    return v;
};
var runAttrName = function (v) {
    return v;
};
var propName = PropName;
var prop = function (dictIsProp) {
    return function (name) {
        return function (attr) {
            return function (v) {
                return new Prop(Data_Exists.mkExists(new PropF(name, v, Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(toPropString(dictIsProp)))(attr))));
            };
        };
    };
};
var numberIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (n) {
            return Prelude.show(Prelude.showNumber)(n);
        };
    };
});
var namespace = Namespace;
var intIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (i) {
            return Prelude.show(Prelude.showInt)(i);
        };
    };
});
var handler = function (name) {
    return function (k) {
        return new Handler(Data_ExistsR.mkExistsR(new HandlerF(name, k)));
    };
};
var functorProp = new Prelude.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Prop) {
            return new Prop(v1.value0);
        };
        if (v1 instanceof Key) {
            return new Key(v1.value0);
        };
        if (v1 instanceof Attr) {
            return new Attr(v1.value0, v1.value1, v1.value2);
        };
        if (v1 instanceof Handler) {
            return Data_ExistsR.runExistsR(function (v2) {
                return new Handler(Data_ExistsR.mkExistsR(new HandlerF(v2.value0, function ($61) {
                    return Prelude.map(Halogen_HTML_Events_Handler.functorEventHandler)(Prelude.map(Data_Maybe.functorMaybe)(v))(v2.value1($61));
                })));
            })(v1.value0);
        };
        if (v1 instanceof Ref) {
            return new Ref(function ($62) {
                return v(v1.value0($62));
            });
        };
        throw new Error("Failed pattern match at Halogen.HTML.Core line 98, column 3 - line 99, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var fillSlot = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Text) {
                    return Prelude.pure(dictApplicative)(new Text(v2.value0));
                };
                if (v2 instanceof Element) {
                    return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Element.create(v2.value0)(v2.value1)(Prelude["<$>"](Prelude.functorArray)(Prelude.map(functorProp)(v1))(v2.value2)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(fillSlot(dictApplicative)(v)(v1))(v2.value3));
                };
                if (v2 instanceof Slot) {
                    return v(v2.value0);
                };
                throw new Error("Failed pattern match at Halogen.HTML.Core line 77, column 1 - line 78, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
};
var eventName = EventName;
var element = Element.create(Data_Maybe.Nothing.value);
var className = ClassName;
var booleanIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2) {
                return runAttrName(v);
            };
            if (!v2) {
                return "";
            };
            throw new Error("Failed pattern match at Halogen.HTML.Core line 138, column 3 - line 139, column 3: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        var go = function (v) {
            if (v instanceof Text) {
                return new Text(v.value0);
            };
            if (v instanceof Element) {
                return new Element(v.value0, v.value1, Prelude["<$>"](Prelude.functorArray)(Prelude.map(functorProp)(g))(v.value2), Prelude["<$>"](Prelude.functorArray)(go)(v.value3));
            };
            if (v instanceof Slot) {
                return new Slot(f(v.value0));
            };
            throw new Error("Failed pattern match at Halogen.HTML.Core line 62, column 3 - line 68, column 1: " + [ v.constructor.name ]);
        };
        return go;
    };
});
var functorHTML = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorHTML));
var attrName = AttrName;
module.exports = {
    HandlerF: HandlerF, 
    PropF: PropF, 
    Prop: Prop, 
    Attr: Attr, 
    Key: Key, 
    Handler: Handler, 
    Ref: Ref, 
    Text: Text, 
    Element: Element, 
    Slot: Slot, 
    IsProp: IsProp, 
    runClassName: runClassName, 
    className: className, 
    runEventName: runEventName, 
    eventName: eventName, 
    runAttrName: runAttrName, 
    attrName: attrName, 
    runPropName: runPropName, 
    propName: propName, 
    runTagName: runTagName, 
    tagName: tagName, 
    runNamespace: runNamespace, 
    namespace: namespace, 
    toPropString: toPropString, 
    handler: handler, 
    prop: prop, 
    fillSlot: fillSlot, 
    element: element, 
    bifunctorHTML: bifunctorHTML, 
    functorHTML: functorHTML, 
    functorProp: functorProp, 
    stringIsProp: stringIsProp, 
    intIsProp: intIsProp, 
    numberIsProp: numberIsProp, 
    booleanIsProp: booleanIsProp
};
