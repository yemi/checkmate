// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Flip = (function () {
    function Flip(value0) {
        this.value0 = value0;
    };
    Flip.create = function (value0) {
        return new Flip(value0);
    };
    return Flip;
})();
var runFlip = function (v) {
    return v.value0;
};
var flipFunctor = function (dictBifunctor) {
    return new Prelude.Functor(function (f) {
        return function ($13) {
            return Flip.create(Data_Bifunctor.lmap(dictBifunctor)(f)(runFlip($13)));
        };
    });
};
var flipBifunctor = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function ($14) {
                return Flip.create(Data_Bifunctor.bimap(dictBifunctor)(g)(f)(runFlip($14)));
            };
        };
    });
};
var flipBiapply = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return flipBifunctor(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]());
    }, function (v) {
        return function (v1) {
            return new Flip(Control_Biapply["<<*>>"](dictBiapply)(v.value0)(v1.value0));
        };
    });
};
var flipBiapplicative = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return flipBiapply(dictBiapplicative["__superclass_Control.Biapply.Biapply_0"]());
    }, function (a) {
        return function (b) {
            return new Flip(Control_Biapplicative.bipure(dictBiapplicative)(b)(a));
        };
    });
};
module.exports = {
    Flip: Flip, 
    runFlip: runFlip, 
    flipBifunctor: flipBifunctor, 
    flipFunctor: flipFunctor, 
    flipBiapply: flipBiapply, 
    flipBiapplicative: flipBiapplicative
};
