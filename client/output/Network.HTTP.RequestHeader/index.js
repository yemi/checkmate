// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_MediaType = require("../Data.MediaType");
var Accept = (function () {
    function Accept(value0) {
        this.value0 = value0;
    };
    Accept.create = function (value0) {
        return new Accept(value0);
    };
    return Accept;
})();
var ContentType = (function () {
    function ContentType(value0) {
        this.value0 = value0;
    };
    ContentType.create = function (value0) {
        return new ContentType(value0);
    };
    return ContentType;
})();
var RequestHeader = (function () {
    function RequestHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    RequestHeader.create = function (value0) {
        return function (value1) {
            return new RequestHeader(value0, value1);
        };
    };
    return RequestHeader;
})();
var showRequestHeader = new Prelude.Show(function (v) {
    if (v instanceof Accept) {
        return "(Accept " + (Prelude.show(Data_MediaType.showMediaType)(v.value0) + ")");
    };
    if (v instanceof ContentType) {
        return "(ContentType " + (Prelude.show(Data_MediaType.showMediaType)(v.value0) + ")");
    };
    if (v instanceof RequestHeader) {
        return "(RequestHeader " + (Prelude.show(Prelude.showString)(v.value0) + (" " + (Prelude.show(Prelude.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 19, column 3 - line 20, column 3: " + [ v.constructor.name ]);
});
var requestHeaderValue = function (v) {
    if (v instanceof Accept) {
        return Data_MediaType.mediaTypeToString(v.value0);
    };
    if (v instanceof ContentType) {
        return Data_MediaType.mediaTypeToString(v.value0);
    };
    if (v instanceof RequestHeader) {
        return v.value1;
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 29, column 1 - line 30, column 1: " + [ v.constructor.name ]);
};
var requestHeaderName = function (v) {
    if (v instanceof Accept) {
        return "Accept";
    };
    if (v instanceof ContentType) {
        return "Content-Type";
    };
    if (v instanceof RequestHeader) {
        return v.value0;
    };
    throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 24, column 1 - line 25, column 1: " + [ v.constructor.name ]);
};
var eqRequestHeader = new Prelude.Eq(function (v) {
    return function (v1) {
        if (v instanceof Accept && v1 instanceof Accept) {
            return Prelude["=="](Data_MediaType.eqMediaType)(v.value0)(v1.value0);
        };
        if (v instanceof ContentType && v1 instanceof ContentType) {
            return Prelude["=="](Data_MediaType.eqMediaType)(v.value0)(v1.value0);
        };
        if (v instanceof RequestHeader && v1 instanceof RequestHeader) {
            return v.value0 === v1.value0 && v.value1 === v1.value1;
        };
        return false;
    };
});
module.exports = {
    Accept: Accept, 
    ContentType: ContentType, 
    RequestHeader: RequestHeader, 
    requestHeaderValue: requestHeaderValue, 
    requestHeaderName: requestHeaderName, 
    eqRequestHeader: eqRequestHeader, 
    showRequestHeader: showRequestHeader
};
