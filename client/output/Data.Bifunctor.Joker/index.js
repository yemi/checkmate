// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Joker = (function () {
    function Joker(value0) {
        this.value0 = value0;
    };
    Joker.create = function (value0) {
        return new Joker(value0);
    };
    return Joker;
})();
var runJoker = function (v) {
    return v.value0;
};
var jokerFunctor = function (dictFunctor) {
    return new Prelude.Functor(function (g) {
        return function ($15) {
            return Joker.create(Prelude.map(dictFunctor)(g)(runJoker($15)));
        };
    });
};
var jokerBifunctor = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (v) {
        return function (g) {
            return function ($16) {
                return Joker.create(Prelude.map(dictFunctor)(g)(runJoker($16)));
            };
        };
    });
};
var jokerBiapply = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return jokerBifunctor(dictApply["__superclass_Prelude.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return new Joker(Prelude["<*>"](dictApply)(v.value0)(v1.value0));
        };
    });
};
var jokerBiapplicative = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return jokerBiapply(dictApplicative["__superclass_Prelude.Apply_0"]());
    }, function (v) {
        return function (b) {
            return new Joker(Prelude.pure(dictApplicative)(b));
        };
    });
};
module.exports = {
    Joker: Joker, 
    runJoker: runJoker, 
    jokerBifunctor: jokerBifunctor, 
    jokerFunctor: jokerFunctor, 
    jokerBiapply: jokerBiapply, 
    jokerBiapplicative: jokerBiapplicative
};
