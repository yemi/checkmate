// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Clown = (function () {
    function Clown(value0) {
        this.value0 = value0;
    };
    Clown.create = function (value0) {
        return new Clown(value0);
    };
    return Clown;
})();
var runClown = function (v) {
    return v.value0;
};
var clownFunctor = new Prelude.Functor(function (v) {
    return function ($15) {
        return Clown.create(runClown($15));
    };
});
var clownBifunctor = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (v) {
            return function ($16) {
                return Clown.create(Prelude.map(dictFunctor)(f)(runClown($16)));
            };
        };
    });
};
var clownBiapply = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return clownBifunctor(dictApply["__superclass_Prelude.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return new Clown(Prelude["<*>"](dictApply)(v.value0)(v1.value0));
        };
    });
};
var clownBiapplicative = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return clownBiapply(dictApplicative["__superclass_Prelude.Apply_0"]());
    }, function (a) {
        return function (v) {
            return new Clown(Prelude.pure(dictApplicative)(a));
        };
    });
};
module.exports = {
    Clown: Clown, 
    runClown: runClown, 
    clownBifunctor: clownBifunctor, 
    clownFunctor: clownFunctor, 
    clownBiapply: clownBiapply, 
    clownBiapplicative: clownBiapplicative
};
