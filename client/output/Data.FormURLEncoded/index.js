// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_String = require("../Data.String");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Data_Generic = require("../Data.Generic");
var Global = require("../Global");
var FormURLEncoded = function (x) {
    return x;
};
var toArray = function (v) {
    return v;
};
var genericFormUrlEncoded = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.FormURLEncoded.FormURLEncoded" && v.value1.length === 1)) {
        return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FormURLEncoded))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v.value1[0](Prelude.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.FormURLEncoded.FormURLEncoded", [ {
        sigConstructor: "Data.FormURLEncoded.FormURLEncoded", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.FormURLEncoded.FormURLEncoded", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericTuple(Data_Generic.genericString)(Data_Generic.genericMaybe(Data_Generic.genericString))))(v);
    } ]);
});
var showFormUrlEncoded = new Prelude.Show(Data_Generic.gShow(genericFormUrlEncoded));
var fromArray = FormURLEncoded;
var eqFormUrlEncoded = new Prelude.Eq(function (v) {
    return function (v1) {
        return Prelude.eq(Prelude.eqArray(Data_Tuple.eqTuple(Prelude.eqString)(Data_Maybe.eqMaybe(Prelude.eqString))))(v)(v1);
    };
});
var ordFormUrlEncoded = new Prelude.Ord(function () {
    return eqFormUrlEncoded;
}, function (v) {
    return function (v1) {
        return Prelude.compare(Prelude.ordArray(Data_Tuple.ordTuple(Prelude.ordString)(Data_Maybe.ordMaybe(Prelude.ordString))))(v)(v1);
    };
});
var encode = (function () {
    var encodePart = function (v) {
        if (v.value1 instanceof Data_Maybe.Nothing) {
            return Global["encodeURIComponent"](v.value0);
        };
        if (v.value1 instanceof Data_Maybe.Just) {
            return Global["encodeURIComponent"](v.value0) + ("=" + Global["encodeURIComponent"](v.value1.value0));
        };
        throw new Error("Failed pattern match at Data.FormURLEncoded line 44, column 5 - line 45, column 5: " + [ v.constructor.name ]);
    };
    return function ($26) {
        return Data_String.joinWith("&")(Prelude.map(Prelude.functorArray)(encodePart)(toArray($26)));
    };
})();
module.exports = {
    encode: encode, 
    toArray: toArray, 
    fromArray: fromArray, 
    genericFormUrlEncoded: genericFormUrlEncoded, 
    eqFormUrlEncoded: eqFormUrlEncoded, 
    ordFormUrlEncoded: ordFormUrlEncoded, 
    showFormUrlEncoded: showFormUrlEncoded
};
