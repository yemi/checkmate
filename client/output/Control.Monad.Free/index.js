// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans = require("../Control.Monad.Trans");
var Data_CatList = require("../Data.CatList");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Inject = require("../Data.Inject");
var Data_Maybe = require("../Data.Maybe");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Tuple = require("../Data.Tuple");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ExpF = function (x) {
    return x;
};
var Free = (function () {
    function Free(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Free.create = function (value0) {
        return function (value1) {
            return new Free(value0, value1);
        };
    };
    return Free;
})();
var Return = (function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
})();
var Bind = (function () {
    function Bind(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bind.create = function (value0) {
        return function (value1) {
            return new Bind(value0, value1);
        };
    };
    return Bind;
})();
var toView = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        var runExpF = function (v2) {
            return v2;
        };
        var concatF = function (v2) {
            return function (r) {
                return new Free(v2.value0, Prelude["<>"](Data_CatList.semigroupCatList)(v2.value1)(r));
            };
        };
        if (v.value0 instanceof Return) {
            var $19 = Data_CatList.uncons(v.value1);
            if ($19 instanceof Data_Maybe.Nothing) {
                return new Return(Unsafe_Coerce.unsafeCoerce(v.value0.value0));
            };
            if ($19 instanceof Data_Maybe.Just) {
                var __tco_v = Unsafe_Coerce.unsafeCoerce(concatF(runExpF($19.value0.value0)(v.value0.value0))($19.value0.value1));
                v = __tco_v;
                continue tco;
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 138, column 20 - line 141, column 8: " + [ $19.constructor.name ]);
        };
        if (v.value0 instanceof Bind) {
            return new Bind(v.value0.value0, function (a) {
                return Unsafe_Coerce.unsafeCoerce(concatF(v.value0.value1(a))(v.value1));
            });
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 137, column 3 - line 142, column 3: " + [ v.value0.constructor.name ]);
    };
};
var runFreeM = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (k) {
            var go = function (f) {
                var $28 = toView(f);
                if ($28 instanceof Return) {
                    return Prelude["<$>"]((((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(Prelude.pure((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())($28.value0));
                };
                if ($28 instanceof Bind) {
                    return Prelude["<$>"]((((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(k(Prelude["<$>"](dictFunctor)($28.value1)($28.value0)));
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 125, column 5 - line 129, column 1: " + [ $28.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
        };
    };
};
var runFree = function (dictFunctor) {
    return function (k) {
        return function ($40) {
            return Data_Identity.runIdentity(runFreeM(dictFunctor)(Control_Monad_Rec_Class.monadRecIdentity)(function ($41) {
                return Data_Identity.Identity(k($41));
            })($40));
        };
    };
};
var fromView = function (f) {
    return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
};
var suspendF = function (dictApplicative) {
    return function (f) {
        return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(Prelude.pure(dictApplicative)(f)), function ($42) {
            return Prelude.id(Prelude.categoryFn)(Unsafe_Coerce.unsafeCoerce($42));
        }));
    };
};
var freeMonad = new Prelude.Monad(function () {
    return freeApplicative;
}, function () {
    return freeBind;
});
var freeFunctor = new Prelude.Functor(function (k) {
    return function (f) {
        return Prelude[">>="](freeBind)(f)(function ($43) {
            return Prelude["return"](freeApplicative)(k($43));
        });
    };
});
var freeBind = new Prelude.Bind(function () {
    return freeApply;
}, function (v) {
    return function (k) {
        return new Free(v.value0, Data_CatList.snoc(v.value1)(Unsafe_Coerce.unsafeCoerce(k)));
    };
});
var freeApply = new Prelude.Apply(function () {
    return freeFunctor;
}, Prelude.ap(freeMonad));
var freeApplicative = new Prelude.Applicative(function () {
    return freeApply;
}, function ($44) {
    return fromView(Return.create($44));
});
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
    return freeMonad;
}, function (k) {
    return function (a) {
        return Prelude[">>="](freeBind)(k(a))(Data_Either.either(Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k))(Prelude.pure(freeApplicative)));
    };
});
var liftF = function (f) {
    return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), function ($45) {
        return Prelude.pure(freeApplicative)(Unsafe_Coerce.unsafeCoerce($45));
    }));
};
var freeMonadTrans = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
    return liftF;
});
var liftFI = function (dictInject) {
    return function (fa) {
        return liftF(Data_Inject.inj(dictInject)(fa));
    };
};
var foldFree = function (dictMonadRec) {
    return function (k) {
        var go = function (f) {
            var $36 = toView(f);
            if ($36 instanceof Return) {
                return Prelude["<$>"]((((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(Prelude.pure((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())($36.value0));
            };
            if ($36 instanceof Bind) {
                return Prelude["<$>"]((((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function ($46) {
                    return Data_Either.Left.create($36.value1($46));
                })(k($36.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 110, column 5 - line 115, column 1: " + [ $36.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
var mapF = function (k) {
    return foldFree(freeMonadRec)(function ($47) {
        return liftF(k($47));
    });
};
var injF = function (dictInject) {
    return mapF(Data_Inject.inj(dictInject));
};
module.exports = {
    runFreeM: runFreeM, 
    runFree: runFree, 
    foldFree: foldFree, 
    injF: injF, 
    mapF: mapF, 
    liftFI: liftFI, 
    liftF: liftF, 
    suspendF: suspendF, 
    freeFunctor: freeFunctor, 
    freeBind: freeBind, 
    freeApplicative: freeApplicative, 
    freeApply: freeApply, 
    freeMonad: freeMonad, 
    freeMonadTrans: freeMonadTrans, 
    freeMonadRec: freeMonadRec
};
