// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Wrap = (function () {
    function Wrap(value0) {
        this.value0 = value0;
    };
    Wrap.create = function (value0) {
        return new Wrap(value0);
    };
    return Wrap;
})();
var unwrap = function (v) {
    return v.value0;
};
var wrapBifunctor = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function ($13) {
                return Wrap.create(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(unwrap($13)));
            };
        };
    });
};
var wrapBiapply = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return wrapBifunctor(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]());
    }, function (v) {
        return function (v1) {
            return new Wrap(Control_Biapply["<<*>>"](dictBiapply)(v.value0)(v1.value0));
        };
    });
};
var wrapBiapplicative = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return wrapBiapply(dictBiapplicative["__superclass_Control.Biapply.Biapply_0"]());
    }, function (a) {
        return function (b) {
            return new Wrap(Control_Biapplicative.bipure(dictBiapplicative)(a)(b));
        };
    });
};
var wrapFunctor = function (dictBifunctor) {
    return new Prelude.Functor(function (f) {
        return function ($14) {
            return Wrap.create(Data_Bifunctor.rmap(dictBifunctor)(f)(unwrap($14)));
        };
    });
};
module.exports = {
    Wrap: Wrap, 
    unwrap: unwrap, 
    wrapBifunctor: wrapBifunctor, 
    wrapFunctor: wrapFunctor, 
    wrapBiapply: wrapBiapply, 
    wrapBiapplicative: wrapBiapplicative
};
