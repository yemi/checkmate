// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_Monoid = require("../Data.Monoid");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Op = function (x) {
    return x;
};
var semigroupoidOp = new Prelude.Semigroupoid(function (v) {
    return function (v1) {
        return function ($12) {
            return v1(v($12));
        };
    };
});
var semigroupOp = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return function (a) {
                return Prelude["<>"](dictSemigroup)(v(a))(v1(a));
            };
        };
    });
};
var runOp = function (v) {
    return v;
};
var monoidOp = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupOp(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](Data_Monoid.mempty(dictMonoid)));
};
var contravariantOp = new Data_Functor_Contravariant.Contravariant(function (f) {
    return function (g) {
        return function ($13) {
            return runOp(g)(f($13));
        };
    };
});
var categoryOp = new Prelude.Category(function () {
    return semigroupoidOp;
}, Prelude.id(Prelude.categoryFn));
module.exports = {
    Op: Op, 
    runOp: runOp, 
    semigroupoidOp: semigroupoidOp, 
    categoryOp: categoryOp, 
    contravariantOp: contravariantOp, 
    semigroupOp: semigroupOp, 
    monoidOp: monoidOp
};
