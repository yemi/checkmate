// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Void = function (x) {
    return x;
};
var showVoid = new Prelude.Show(function (v) {
    return "Void";
});
var eqVoid = new Prelude.Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var absurd = function (a) {
    var spin = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            var __tco_v = v;
            v = __tco_v;
            continue tco;
        };
    };
    return spin(a);
};
var coerce = function (dictContravariant) {
    return function (dictFunctor) {
        return function (a) {
            return Prelude["<$>"](dictFunctor)(absurd)(Data_Functor_Contravariant[">$<"](dictContravariant)(absurd)(a));
        };
    };
};
module.exports = {
    Void: Void, 
    absurd: absurd, 
    coerce: coerce, 
    eqVoid: eqVoid, 
    showVoid: showVoid
};
