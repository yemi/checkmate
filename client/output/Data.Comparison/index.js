// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_Function = require("../Data.Function");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Data_Monoid = require("../Data.Monoid");
var Comparison = function (x) {
    return x;
};
var semigroupComparison = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return Prelude["<>"](Prelude.semigroupFn(Prelude.semigroupFn(Prelude.semigroupOrdering)))(v)(v1);
    };
});
var runComparison = function (v) {
    return v;
};
var monoidComparison = new Data_Monoid.Monoid(function () {
    return semigroupComparison;
}, function (v) {
    return function (v1) {
        return Prelude.EQ.value;
    };
});
var defaultComparison = function (dictOrd) {
    return Prelude.compare(dictOrd);
};
var contravariantComparison = new Data_Functor_Contravariant.Contravariant(function (f) {
    return function (v) {
        return Data_Function.on(v)(f);
    };
});
module.exports = {
    Comparison: Comparison, 
    defaultComparison: defaultComparison, 
    runComparison: runComparison, 
    contravariantComparison: contravariantComparison, 
    semigroupComparison: semigroupComparison, 
    monoidComparison: monoidComparison
};
