// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_State = require("../Control.Monad.State");
var Data_Functor = require("../Data.Functor");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Get = (function () {
    function Get(value0) {
        this.value0 = value0;
    };
    Get.create = function (value0) {
        return new Get(value0);
    };
    return Get;
})();
var Modify = (function () {
    function Modify(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Modify.create = function (value0) {
        return function (value1) {
            return new Modify(value0, value1);
        };
    };
    return Modify;
})();
var stateN = function (dictMonad) {
    return function (dictMonadState) {
        return function (v) {
            if (v instanceof Get) {
                return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(Control_Monad_State_Class.get(dictMonadState))(function ($22) {
                    return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(v.value0($22));
                });
            };
            if (v instanceof Modify) {
                return Data_Functor["$>"](((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_State_Class.modify(dictMonadState)(v.value0))(v.value1);
            };
            throw new Error("Failed pattern match at Halogen.Query.StateF line 34, column 1 - line 35, column 1: " + [ v.constructor.name ]);
        };
    };
};
var mapState = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Get) {
                return new Get(function ($23) {
                    return v2.value0(v($23));
                });
            };
            if (v2 instanceof Modify) {
                return new Modify(v1(v2.value0), v2.value1);
            };
            throw new Error("Failed pattern match at Halogen.Query.StateF line 28, column 1 - line 29, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var functorStateF = new Prelude.Functor(function (f) {
    return function (v) {
        if (v instanceof Get) {
            return new Get(function ($24) {
                return f(v.value0($24));
            });
        };
        if (v instanceof Modify) {
            return new Modify(v.value0, f(v.value1));
        };
        throw new Error("Failed pattern match at Halogen.Query.StateF line 22, column 3 - line 23, column 3: " + [ f.constructor.name, v.constructor.name ]);
    };
});
module.exports = {
    Get: Get, 
    Modify: Modify, 
    stateN: stateN, 
    mapState: mapState, 
    functorStateF: functorStateF
};
