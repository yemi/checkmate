// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad_Trans = require("../Control.Monad.Trans");
var Yoneda = function (x) {
    return x;
};
var runYoneda = function (v) {
    return function (k) {
        return v(k);
    };
};
var lowerYoneda = function (v) {
    return v(Prelude.id(Prelude.categoryFn));
};
var liftYoneda = function (dictFunctor) {
    return function (m) {
        return function (k) {
            return Prelude["<$>"](dictFunctor)(k)(m);
        };
    };
};
var monadTransYoneda = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
    return liftYoneda(((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
});
var functorYoneda = new Prelude.Functor(function (f) {
    return function (m) {
        return function (k) {
            return runYoneda(m)(function ($23) {
                return k(f($23));
            });
        };
    };
});
var extendYoneda = function (dictExtend) {
    return new Control_Extend.Extend(function () {
        return functorYoneda;
    }, function (f) {
        return function (v) {
            return function (k) {
                return Control_Extend["<<="](dictExtend)(function ($24) {
                    return k(f(liftYoneda(dictExtend["__superclass_Prelude.Functor_0"]())($24)));
                })(v(Prelude.id(Prelude.categoryFn)));
            };
        };
    });
};
var comonadYoneda = function (dictComonad) {
    return new Control_Comonad.Comonad(function () {
        return extendYoneda(dictComonad["__superclass_Control.Extend.Extend_0"]());
    }, function ($25) {
        return Control_Comonad.extract(dictComonad)(lowerYoneda($25));
    });
};
var applyYoneda = function (dictApply) {
    return new Prelude.Apply(function () {
        return functorYoneda;
    }, function (v) {
        return function (v1) {
            return function (k) {
                return Prelude["<*>"](dictApply)(v(Prelude["<<<"](Prelude.semigroupoidFn)(k)))(v1(Prelude.id(Prelude.categoryFn)));
            };
        };
    });
};
var bindYoneda = function (dictBind) {
    return new Prelude.Bind(function () {
        return applyYoneda(dictBind["__superclass_Prelude.Apply_0"]());
    }, function (v) {
        return function (g) {
            return function (k) {
                return Prelude[">>="](dictBind)(v(Prelude.id(Prelude.categoryFn)))(function (a) {
                    return runYoneda(g(a))(k);
                });
            };
        };
    });
};
var applicativeYoneda = function (dictApplicative) {
    return new Prelude.Applicative(function () {
        return applyYoneda(dictApplicative["__superclass_Prelude.Apply_0"]());
    }, function ($26) {
        return liftYoneda((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.pure(dictApplicative)($26));
    });
};
var monadYoneda = function (dictMonad) {
    return new Prelude.Monad(function () {
        return applicativeYoneda(dictMonad["__superclass_Prelude.Applicative_0"]());
    }, function () {
        return bindYoneda(dictMonad["__superclass_Prelude.Bind_1"]());
    });
};
module.exports = {
    Yoneda: Yoneda, 
    lowerYoneda: lowerYoneda, 
    liftYoneda: liftYoneda, 
    runYoneda: runYoneda, 
    functorYoneda: functorYoneda, 
    applyYoneda: applyYoneda, 
    applicativeYoneda: applicativeYoneda, 
    bindYoneda: bindYoneda, 
    monadYoneda: monadYoneda, 
    monadTransYoneda: monadTransYoneda, 
    extendYoneda: extendYoneda, 
    comonadYoneda: comonadYoneda
};
