// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Control_Bind = require("../Control.Bind");
var Control_Coroutine_Aff = require("../Control.Coroutine.Aff");
var Control_Coroutine_Stalling = require("../Control.Coroutine.Stalling");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Free = require("../Control.Monad.Free");
var Data_Const = require("../Data.Const");
var Data_Either = require("../Data.Either");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Maybe = require("../Data.Maybe");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var EventSource = function (x) {
    return x;
};
var toParentEventSource = Unsafe_Coerce.unsafeCoerce;
var runEventSource = function (v) {
    return v;
};
var fromParentEventSource = Unsafe_Coerce.unsafeCoerce;
var eventSource_ = function (dictMonad) {
    return function (dictMonadAff) {
        return function (attach) {
            return function (handle) {
                return EventSource(Control_Coroutine_Stalling.producerToStallingProducer(((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Coroutine_Aff["produce'"](dictMonadAff)(function (emit) {
                    return attach(Control_Bind["=<<"](Control_Monad_Eff.bindEff)(function ($9) {
                        return emit(Data_Either.Left.create($9));
                    })(handle));
                })));
            };
        };
    };
};
var eventSource = function (dictMonad) {
    return function (dictMonadAff) {
        return function (attach) {
            return function (handle) {
                return EventSource(Control_Coroutine_Stalling.producerToStallingProducer(((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Coroutine_Aff["produce'"](dictMonadAff)(function (emit) {
                    return attach(Control_Bind["<=<"](Control_Monad_Eff.bindEff)(function ($10) {
                        return emit(Data_Either.Left.create($10));
                    })(handle));
                })));
            };
        };
    };
};
var catEventSource = function (dictMonadRec) {
    return function (v) {
        return EventSource(Control_Coroutine_Stalling.catMaybes(dictMonadRec)(Control_Coroutine_Stalling.mapStallingProducer((((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Functor_Coproduct.coproduct(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(v)));
    };
};
module.exports = {
    EventSource: EventSource, 
    fromParentEventSource: fromParentEventSource, 
    toParentEventSource: toParentEventSource, 
    catEventSource: catEventSource, 
    eventSource_: eventSource_, 
    eventSource: eventSource, 
    runEventSource: runEventSource
};
