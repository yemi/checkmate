// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Injector = require("../Data.Injector");
var Data_Maybe = require("../Data.Maybe");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var ChildPath = (function () {
    function ChildPath(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ChildPath.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ChildPath(value0, value1, value2);
            };
        };
    };
    return ChildPath;
})();
var $colon$greater = compose;
var prjState = function (v) {
    return Data_Injector.prj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value0(dictChoice)(dictApplicative);
        };
    });
};
var prjSlot = function (v) {
    return Data_Injector.prj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value2(dictChoice)(dictApplicative);
        };
    });
};
var prjQuery = function (v) {
    return Data_Injector.prj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value1(dictChoice)(dictApplicative);
        };
    });
};
var injState = function (v) {
    return Data_Injector.inj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value0(dictChoice)(dictApplicative);
        };
    });
};
var injSlot = function (v) {
    return Data_Injector.inj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value2(dictChoice)(dictApplicative);
        };
    });
};
var injQuery = function (v) {
    return Data_Injector.inj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value1(dictChoice)(dictApplicative);
        };
    });
};
var cpR = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injRE(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injRC(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injRE(dictChoice)(dictApplicative);
    };
});
var cpL = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injLE(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injLC(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injLE(dictChoice)(dictApplicative);
    };
});
var cpI = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injI(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injI(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Data_Injector.injI(dictChoice)(dictApplicative);
    };
});
var compose = function (v) {
    return function (v1) {
        return new ChildPath(function (dictChoice) {
            return function (dictApplicative) {
                return function ($76) {
                    return v.value0(dictChoice)(dictApplicative)(v1.value0(dictChoice)(dictApplicative)($76));
                };
            };
        }, function (dictChoice) {
            return function (dictApplicative) {
                return function ($77) {
                    return v.value1(dictChoice)(dictApplicative)(v1.value1(dictChoice)(dictApplicative)($77));
                };
            };
        }, function (dictChoice) {
            return function (dictApplicative) {
                return function ($78) {
                    return v.value2(dictChoice)(dictApplicative)(v1.value2(dictChoice)(dictApplicative)($78));
                };
            };
        });
    };
};
module.exports = {
    ChildPath: ChildPath, 
    prjSlot: prjSlot, 
    injSlot: injSlot, 
    prjQuery: prjQuery, 
    injQuery: injQuery, 
    prjState: prjState, 
    injState: injState, 
    cpI: cpI, 
    cpR: cpR, 
    cpL: cpL, 
    ":>": $colon$greater, 
    compose: compose
};
