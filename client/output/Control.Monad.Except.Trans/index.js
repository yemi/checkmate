// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Either = require("../Data.Either");
var Data_Monoid = require("../Data.Monoid");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_RWS_Class = require("../Control.Monad.RWS.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans = require("../Control.Monad.Trans");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Plus = require("../Control.Plus");
var ExceptT = function (x) {
    return x;
};
var runExceptT = function (v) {
    return v;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        var mapLeft = function (v) {
            return function (v1) {
                if (v1 instanceof Data_Either.Right) {
                    return new Data_Either.Right(v1.value0);
                };
                if (v1 instanceof Data_Either.Left) {
                    return new Data_Either.Left(v(v1.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 43, column 3 - line 44, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return function ($67) {
            return ExceptT(Prelude["<$>"](dictFunctor)(mapLeft(f))(runExceptT($67)));
        };
    };
};
var monadTransExceptT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
    return function (m) {
        return ExceptT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
            return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(v));
        }));
    };
});
var mapExceptT = function (f) {
    return function (m) {
        return f(runExceptT(m));
    };
};
var functorExceptT = function (dictFunctor) {
    return new Prelude.Functor(function (f) {
        return mapExceptT(Prelude["<$>"](dictFunctor)(Prelude["<$>"](Data_Either.functorEither)(f)));
    });
};
var applyExceptT = function (dictApply) {
    return new Prelude.Apply(function () {
        return functorExceptT(dictApply["__superclass_Prelude.Functor_0"]());
    }, function (v) {
        return function (v1) {
            var f$prime = Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["<*>"](Data_Either.applyEither))(v);
            var x$prime = Prelude["<*>"](dictApply)(f$prime)(v1);
            return x$prime;
        };
    });
};
var bindExceptT = function (dictMonad) {
    return new Prelude.Bind(function () {
        return applyExceptT((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]());
    }, function (m) {
        return function (k) {
            return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(m))(Data_Either.either(function ($68) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Either.Left.create($68));
            })(function ($69) {
                return runExceptT(k($69));
            }));
        };
    });
};
var applicativeExceptT = function (dictApplicative) {
    return new Prelude.Applicative(function () {
        return applyExceptT(dictApplicative["__superclass_Prelude.Apply_0"]());
    }, function ($70) {
        return ExceptT(Prelude.pure(dictApplicative)(Data_Either.Right.create($70)));
    });
};
var monadExceptT = function (dictMonad) {
    return new Prelude.Monad(function () {
        return applicativeExceptT(dictMonad["__superclass_Prelude.Applicative_0"]());
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            return runExceptT(f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            }));
        }));
    });
};
var monadEffExceptT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadExceptT(dictMonadEff["__superclass_Prelude.Monad_0"]());
    }, function ($71) {
        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadEff["__superclass_Prelude.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($71));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadExceptT(dictMonad);
    }, function (m) {
        return function (handler) {
            return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(m))(Data_Either.either(function ($72) {
                return runExceptT(handler($72));
            })(function ($73) {
                return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Either.Right.create($73));
            }));
        };
    }, function ($74) {
        return ExceptT(Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Either.Left.create($74)));
    });
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadExceptT(dictMonadReader["__superclass_Prelude.Monad_0"]());
    }, Control_Monad_Trans.lift(monadTransExceptT)(dictMonadReader["__superclass_Prelude.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return function ($75) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Prelude.bind((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runExceptT(f(a)))(function (v) {
                    return Prelude["return"]((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                        if (v instanceof Data_Either.Left) {
                            return new Data_Either.Right(new Data_Either.Left(v.value0));
                        };
                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                            return new Data_Either.Left(v.value0.value0);
                        };
                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                            return new Data_Either.Right(new Data_Either.Right(v.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 71, column 5 - line 76, column 1: " + [ v.constructor.name ]);
                    })());
                });
            })($75));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadState["__superclass_Prelude.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadExceptT(dictMonadWriter["__superclass_Prelude.Monad_0"]());
    }, mapExceptT(function (m) {
        return Prelude.bind((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Prelude["return"]((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Prelude.bind((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(m)(function (v) {
            return Prelude["return"]((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Prelude.id(Prelude.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 123, column 5 - line 127, column 1: " + [ v.constructor.name ]);
            })());
        }));
    }), function (wd) {
        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadWriter["__superclass_Prelude.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
    });
};
var monadRWSExceptT = function (dictMonoid) {
    return function (dictMonadRWS) {
        return new Control_Monad_RWS_Class.MonadRWS(function () {
            return monadReaderExceptT(dictMonadRWS["__superclass_Control.Monad.Reader.Class.MonadReader_1"]());
        }, function () {
            return monadStateExceptT(dictMonadRWS["__superclass_Control.Monad.State.Class.MonadState_3"]());
        }, function () {
            return monadWriterExceptT(dictMonadRWS["__superclass_Control.Monad.Writer.Class.MonadWriter_2"]());
        }, function () {
            return dictMonoid;
        });
    };
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, function (m) {
            return function (n) {
                return ExceptT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(m))(function (v) {
                    if (v instanceof Data_Either.Right) {
                        return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(v.value0));
                    };
                    if (v instanceof Data_Either.Left) {
                        return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(n))(function (v1) {
                            if (v1 instanceof Data_Either.Right) {
                                return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(v1.value0));
                            };
                            if (v1 instanceof Data_Either.Left) {
                                return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 83, column 9 - line 87, column 1: " + [ v1.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 79, column 5 - line 87, column 1: " + [ v.constructor.name ]);
                }));
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadErrorExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return plusExceptT(dictMonoid)(dictMonad);
        }, function () {
            return applicativeExceptT(dictMonad["__superclass_Prelude.Applicative_0"]());
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT, 
    mapExceptT: mapExceptT, 
    withExceptT: withExceptT, 
    runExceptT: runExceptT, 
    functorExceptT: functorExceptT, 
    applyExceptT: applyExceptT, 
    applicativeExceptT: applicativeExceptT, 
    bindExceptT: bindExceptT, 
    monadExceptT: monadExceptT, 
    monadRecExceptT: monadRecExceptT, 
    altExceptT: altExceptT, 
    plusExceptT: plusExceptT, 
    alternativeExceptT: alternativeExceptT, 
    monadPlusExceptT: monadPlusExceptT, 
    monadTransExceptT: monadTransExceptT, 
    monadEffExceptT: monadEffExceptT, 
    monadContExceptT: monadContExceptT, 
    monadErrorExceptT: monadErrorExceptT, 
    monadReaderExceptT: monadReaderExceptT, 
    monadStateExceptT: monadStateExceptT, 
    monadWriterExceptT: monadWriterExceptT, 
    monadRWSExceptT: monadRWSExceptT
};
