// Generated by psc version 0.9.1
"use strict";
var Prelude = require("../Prelude");
var Data_Generic = require("../Data.Generic");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Control_Apply = require("../Control.Apply");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Seconds = function (x) {
    return x;
};
var Minutes = function (x) {
    return x;
};
var Milliseconds = function (x) {
    return x;
};
var Hours = function (x) {
    return x;
};
var Days = function (x) {
    return x;
};
var Duration = function (fromDuration, toDuration) {
    this.fromDuration = fromDuration;
    this.toDuration = toDuration;
};
var unSeconds = function (v) {
    return v;
};
var unMinutes = function (v) {
    return v;
};
var unMilliseconds = function (v) {
    return v;
};
var unHours = function (v) {
    return v;
};
var unDays = function (v) {
    return v;
};
var toDuration = function (dict) {
    return dict.toDuration;
};
var showSeconds = new Data_Show.Show(function (v) {
    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function (v) {
    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function (v) {
    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function (v) {
    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function (v) {
    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semiringSeconds = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return v + v1;
    };
}, function (v) {
    return function (v1) {
        return v * v1;
    };
}, 1.0, 0.0);
var semiringMinutes = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return v + v1;
    };
}, function (v) {
    return function (v1) {
        return v * v1;
    };
}, 1.0, 0.0);
var semiringMilliseconds = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return v + v1;
    };
}, function (v) {
    return function (v1) {
        return v * v1;
    };
}, 1.0, 0.0);
var semiringHours = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return v + v1;
    };
}, function (v) {
    return function (v1) {
        return v * v1;
    };
}, 1.0, 0.0);
var semiringDays = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return v + v1;
    };
}, function (v) {
    return function (v1) {
        return v * v1;
    };
}, 1.0, 0.0);
var ringSeconds = new Data_Ring.Ring(function () {
    return semiringSeconds;
}, function (v) {
    return function (v1) {
        return v - v1;
    };
});
var ringMinutes = new Data_Ring.Ring(function () {
    return semiringMinutes;
}, function (v) {
    return function (v1) {
        return v - v1;
    };
});
var ringMilliseconds = new Data_Ring.Ring(function () {
    return semiringMilliseconds;
}, function (v) {
    return function (v1) {
        return v - v1;
    };
});
var ringHours = new Data_Ring.Ring(function () {
    return semiringHours;
}, function (v) {
    return function (v1) {
        return v - v1;
    };
});
var ringDays = new Data_Ring.Ring(function () {
    return semiringDays;
}, function (v) {
    return function (v1) {
        return v - v1;
    };
});
var genericSeconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Seconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Seconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Seconds", [ {
        sigConstructor: "Data.Time.Duration.Seconds", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Seconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMinutes = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Minutes" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minutes))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Minutes", [ {
        sigConstructor: "Data.Time.Duration.Minutes", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Minutes", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericMilliseconds = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Milliseconds" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Milliseconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Milliseconds", [ {
        sigConstructor: "Data.Time.Duration.Milliseconds", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Milliseconds", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericHours = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Hours" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hours))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Hours", [ {
        sigConstructor: "Data.Time.Duration.Hours", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Hours", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var genericDays = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Days" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Days))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.Time.Duration.Days", [ {
        sigConstructor: "Data.Time.Duration.Days", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.Time.Duration.Days", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
    } ]);
});
var fromDuration = function (dict) {
    return dict.fromDuration;
};
var eqSeconds = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordSeconds = new Data_Ord.Ord(function () {
    return eqSeconds;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
    };
});
var eqMinutes = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordMinutes = new Data_Ord.Ord(function () {
    return eqMinutes;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
    };
});
var eqMilliseconds = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordMilliseconds = new Data_Ord.Ord(function () {
    return eqMilliseconds;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
    };
});
var eqHours = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordHours = new Data_Ord.Ord(function () {
    return eqHours;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
    };
});
var eqDays = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordDays = new Data_Ord.Ord(function () {
    return eqDays;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
    };
});
var durationSeconds = new Duration(function ($199) {
    return Milliseconds((function (v) {
        return v * 1000.0;
    })(unSeconds($199)));
}, function (v) {
    return v / 1000.0;
});
var durationMinutes = new Duration(function ($200) {
    return Milliseconds((function (v) {
        return v * 60000.0;
    })(unMinutes($200)));
}, function (v) {
    return v / 60000.0;
});
var durationMilliseconds = new Duration(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn));
var durationHours = new Duration(function ($201) {
    return Milliseconds((function (v) {
        return v * 3600000.0;
    })(unHours($201)));
}, function (v) {
    return v / 3600000.0;
});
var durationDays = new Duration(function ($202) {
    return Milliseconds((function (v) {
        return v * 8.64e7;
    })(unDays($202)));
}, function (v) {
    return v / 8.64e7;
});
var convertDuration = function (dictDuration) {
    return function (dictDuration1) {
        return function ($203) {
            return toDuration(dictDuration1)(fromDuration(dictDuration)($203));
        };
    };
};
module.exports = {
    Days: Days, 
    Hours: Hours, 
    Milliseconds: Milliseconds, 
    Minutes: Minutes, 
    Seconds: Seconds, 
    Duration: Duration, 
    convertDuration: convertDuration, 
    fromDuration: fromDuration, 
    toDuration: toDuration, 
    unDays: unDays, 
    unHours: unHours, 
    unMilliseconds: unMilliseconds, 
    unMinutes: unMinutes, 
    unSeconds: unSeconds, 
    eqMilliseconds: eqMilliseconds, 
    ordMilliseconds: ordMilliseconds, 
    genericMilliseconds: genericMilliseconds, 
    semiringMilliseconds: semiringMilliseconds, 
    ringMilliseconds: ringMilliseconds, 
    showMilliseconds: showMilliseconds, 
    eqSeconds: eqSeconds, 
    ordSeconds: ordSeconds, 
    genericSeconds: genericSeconds, 
    semiringSeconds: semiringSeconds, 
    ringSeconds: ringSeconds, 
    showSeconds: showSeconds, 
    eqMinutes: eqMinutes, 
    ordMinutes: ordMinutes, 
    genericMinutes: genericMinutes, 
    semiringMinutes: semiringMinutes, 
    ringMinutes: ringMinutes, 
    showMinutes: showMinutes, 
    eqHours: eqHours, 
    ordHours: ordHours, 
    genericHours: genericHours, 
    semiringHours: semiringHours, 
    ringHours: ringHours, 
    showHours: showHours, 
    eqDays: eqDays, 
    ordDays: ordDays, 
    genericDays: genericDays, 
    semiringDays: semiringDays, 
    ringDays: ringDays, 
    showDays: showDays, 
    durationMilliseconds: durationMilliseconds, 
    durationSeconds: durationSeconds, 
    durationMinutes: durationMinutes, 
    durationHours: durationHours, 
    durationDays: durationDays
};
