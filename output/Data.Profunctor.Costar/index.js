// Generated by psc version 0.9.1
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Distributive = require("../Data.Distributive");
var Data_Either = require("../Data.Either");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Function = require("../Data.Function");
var Costar = function (x) {
    return x;
};
var unCostar = function (v) {
    return v;
};
var semigroupoidCostar = function (dictExtend) {
    return new Control_Semigroupoid.Semigroupoid(function (v) {
        return function (v1) {
            return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
        };
    });
};
var profunctorCostar = function (dictFunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($48) {
                    return g(v(Data_Functor.map(dictFunctor)(f)($48)));
                };
            };
        };
    });
};
var strongCostar = function (dictComonad) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorCostar((dictComonad["__superclass_Control.Extend.Extend_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (x) {
            return new Data_Tuple.Tuple(v(Data_Functor.map((dictComonad["__superclass_Control.Extend.Extend_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
        };
    }, function (v) {
        return function (x) {
            return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map((dictComonad["__superclass_Control.Extend.Extend_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Tuple.snd)(x)));
        };
    });
};
var functorCostar = new Data_Functor.Functor(function (f) {
    return function (v) {
        return function ($49) {
            return f(v($49));
        };
    };
});
var invariantCostar = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCostar));
var distributiveCostar = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorCostar;
    }, function (dictFunctor) {
        return function (f) {
            return function ($50) {
                return Data_Distributive.distribute(distributiveCostar(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($50));
            };
        };
    }, function (dictFunctor) {
        return function (f) {
            return function (g) {
                return Data_Functor.map(dictFunctor)(function ($51) {
                    return (function (v) {
                        return Data_Function.apply(v)(g);
                    })(unCostar($51));
                })(f);
            };
        };
    });
};
var costrongCostar = function (dictFunctor) {
    return new Data_Profunctor_Costrong.Costrong(function () {
        return profunctorCostar(dictFunctor);
    }, function (v) {
        return function (fb) {
            var bd = v(Data_Functor.map(dictFunctor)(function (a) {
                return new Data_Tuple.Tuple(a, Data_Tuple.snd(bd));
            })(fb));
            return Data_Tuple.fst(bd);
        };
    }, function (v) {
        return function (fb) {
            var db = v(Data_Functor.map(dictFunctor)(function (a) {
                return new Data_Tuple.Tuple(Data_Tuple.fst(db), a);
            })(fb));
            return Data_Tuple.snd(db);
        };
    });
};
var cochoiceCostar = function (dictApplicative) {
    return new Data_Profunctor_Cochoice.Cochoice(function () {
        return profunctorCostar((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        var g = function ($52) {
            return Data_Either.either(Control_Category.id(Control_Category.categoryFn))(function (r) {
                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Right(r)));
            })(v($52));
        };
        return function ($53) {
            return g(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)($53));
        };
    }, function (v) {
        var g = function ($54) {
            return Data_Either.either(function (l) {
                return g(Control_Applicative.pure(dictApplicative)(new Data_Either.Left(l)));
            })(Control_Category.id(Control_Category.categoryFn))(v($54));
        };
        return function ($55) {
            return g(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)($55));
        };
    });
};
var closedCostar = function (dictFunctor) {
    return new Data_Profunctor_Closed.Closed(function () {
        return profunctorCostar(dictFunctor);
    }, function (v) {
        return function (g) {
            return function (x) {
                return v(Data_Functor.map(dictFunctor)(function (v1) {
                    return Data_Function.apply(v1)(x);
                })(g));
            };
        };
    });
};
var categoryCostar = function (dictComonad) {
    return new Control_Category.Category(function () {
        return semigroupoidCostar(dictComonad["__superclass_Control.Extend.Extend_0"]());
    }, Control_Comonad.extract(dictComonad));
};
var applyCostar = new Control_Apply.Apply(function () {
    return functorCostar;
}, function (v) {
    return function (v1) {
        return function (a) {
            return v(a)(v1(a));
        };
    };
});
var bindCostar = new Control_Bind.Bind(function () {
    return applyCostar;
}, function (v) {
    return function (f) {
        return function (x) {
            return unCostar(f(v(x)))(x);
        };
    };
});
var applicativeCostar = new Control_Applicative.Applicative(function () {
    return applyCostar;
}, function (a) {
    return function (v) {
        return a;
    };
});
var monadCostar = new Control_Monad.Monad(function () {
    return applicativeCostar;
}, function () {
    return bindCostar;
});
module.exports = {
    Costar: Costar, 
    unCostar: unCostar, 
    semigroupoidCostar: semigroupoidCostar, 
    categoryCostar: categoryCostar, 
    functorCostar: functorCostar, 
    invariantCostar: invariantCostar, 
    applyCostar: applyCostar, 
    applicativeCostar: applicativeCostar, 
    bindCostar: bindCostar, 
    monadCostar: monadCostar, 
    distributiveCostar: distributiveCostar, 
    profunctorCostar: profunctorCostar, 
    strongCostar: strongCostar, 
    costrongCostar: costrongCostar, 
    cochoiceCostar: cochoiceCostar, 
    closedCostar: closedCostar
};
