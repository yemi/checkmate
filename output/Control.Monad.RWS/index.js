// Generated by psc version 0.9.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_RWS_Class = require("../Control.Monad.RWS.Class");
var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans");
var Data_Identity = require("../Data.Identity");
var Data_Tuple = require("../Data.Tuple");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var withRWS = Control_Monad_RWS_Trans.withRWST;
var rws = function (f) {
    return function (r) {
        return function (s) {
            return Data_Function.apply(Control_Applicative.pure(Data_Identity.applicativeIdentity))(f(r)(s));
        };
    };
};
var runRWS = function (m) {
    return function (r) {
        return function (s) {
            var $1 = m(r)(s);
            return $1;
        };
    };
};
var mapRWS = function (f) {
    return Control_Monad_RWS_Trans.mapRWST(function ($2) {
        return Data_Identity.Identity(f(Data_Identity.runIdentity($2)));
    });
};
var execRWS = function (m) {
    return function (r) {
        return function (s) {
            return Data_Function.apply(Data_Identity.runIdentity)(Control_Monad_RWS_Trans.execRWST(Data_Identity.monadIdentity)(m)(r)(s));
        };
    };
};
var evalRWS = function (m) {
    return function (r) {
        return function (s) {
            return Data_Function.apply(Data_Identity.runIdentity)(Control_Monad_RWS_Trans.evalRWST(Data_Identity.monadIdentity)(m)(r)(s));
        };
    };
};
module.exports = {
    evalRWS: evalRWS, 
    execRWS: execRWS, 
    mapRWS: mapRWS, 
    runRWS: runRWS, 
    rws: rws, 
    withRWS: withRWS
};
