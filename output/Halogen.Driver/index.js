// Generated by psc version 0.9.1
"use strict";
var Prelude = require("../Prelude");
var Control_Bind = require("../Control.Bind");
var Control_Coroutine = require("../Control.Coroutine");
var Control_Coroutine_Stalling_1 = require("../Control.Coroutine.Stalling");
var Control_Coroutine_Stalling_1 = require("../Control.Coroutine.Stalling");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Free = require("../Control.Monad.Free");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State = require("../Control.Monad.State");
var Control_Monad_Trans = require("../Control.Monad.Trans");
var Control_Plus = require("../Control.Plus");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_Node_Node = require("../DOM.Node.Node");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Component_Hook = require("../Halogen.Component.Hook");
var Halogen_Effects = require("../Halogen.Effects");
var Halogen_HTML_Renderer_VirtualDOM = require("../Halogen.HTML.Renderer.VirtualDOM");
var Halogen_Internal_VirtualDOM = require("../Halogen.Internal.VirtualDOM");
var Halogen_Query = require("../Halogen.Query");
var Halogen_Query_HalogenF = require("../Halogen.Query.HalogenF");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Halogen_Query_StateF = require("../Halogen.Query.StateF");
var Data_Function = require("../Data.Function");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Data_Identity = require("../Data.Identity");
var Control_Applicative = require("../Control.Applicative");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Unit = require("../Data.Unit");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var onInitializers = function (dictFoldable) {
    return function (f) {
        var go = function (v) {
            return function (as) {
                if (v instanceof Halogen_Component_Hook.PostRender) {
                    return new Data_List.Cons(f(v.value0), as);
                };
                return as;
            };
        };
        return Data_Foldable.foldr(dictFoldable)(go)(Data_List.Nil.value);
    };
};
var onFinalizers = function (dictFoldable) {
    return function (f) {
        var go = function (v) {
            return function (as) {
                if (v instanceof Halogen_Component_Hook.Finalized) {
                    return new Data_List.Cons(f(v.value0), as);
                };
                return as;
            };
        };
        return Data_Foldable.foldr(dictFoldable)(go)(Data_List.Nil.value);
    };
};
var runUI = function (c) {
    return function (s) {
        return function (element) {
            var driver$prime = function (e) {
                return function (s1) {
                    return function (i) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](s1))(function (v) {
                            return Data_Function.flip(Control_Monad_Free.runFreeM(Halogen_Query_HalogenF.functorHalogenF(Control_Monad_Aff.functorAff))(Control_Monad_Aff.monadRecAff))(e(i))(function (h) {
                                if (h instanceof Halogen_Query_HalogenF.StateHF) {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v1) {
                                        var $29 = Control_Monad_State.runState(Halogen_Query_StateF.stateN(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(h.value0))(v1);
                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)($29.value1))(function () {
                                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)($29.value0);
                                        });
                                    });
                                };
                                if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
                                };
                                if (h instanceof Halogen_Query_HalogenF.RenderHF) {
                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
                                };
                                if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
                                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(h.value0(Data_Maybe.Nothing.value));
                                };
                                if (h instanceof Halogen_Query_HalogenF.QueryHF) {
                                    return h.value0;
                                };
                                if (h instanceof Halogen_Query_HalogenF.HaltHF) {
                                    return Control_Plus.empty(Control_Monad_Aff.plusAff);
                                };
                                throw new Error("Failed pattern match at Halogen.Driver line 145, column 7 - line 156, column 24: " + [ h.constructor.name ]);
                            });
                        });
                    };
                };
            };
            var render = function (ref) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
                    if (v.renderPaused) {
                        return Data_Function.apply(Control_Monad_Aff_AVar.putVar(ref))((function () {
                            var $41 = {};
                            for (var $42 in v) {
                                if (v.hasOwnProperty($42)) {
                                    $41[$42] = v[$42];
                                };
                            };
                            $41.renderPending = true;
                            return $41;
                        })());
                    };
                    if (!v.renderPaused) {
                        var rc = Halogen_Component.renderComponent(c)(v.state);
                        var vtree$prime = Halogen_HTML_Renderer_VirtualDOM.renderTree(driver(ref))(rc.tree);
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(Halogen_Internal_VirtualDOM.patch(Halogen_Internal_VirtualDOM.diff(v.vtree)(vtree$prime))(v.node)))(function (v1) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)({
                                node: v1, 
                                vtree: vtree$prime, 
                                state: rc.state, 
                                renderPending: false, 
                                renderPaused: true
                            }))(function () {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onFinalizers(Data_Foldable.foldableArray)(Halogen_Component_Hook.runFinalized(driver$prime))(rc.hooks)))(function () {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onInitializers(Data_Foldable.foldableArray)(driver(ref))(rc.hooks)))(function () {
                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(function (v2) {
                                            var $44 = {};
                                            for (var $45 in v2) {
                                                if (v2.hasOwnProperty($45)) {
                                                    $44[$45] = v2[$45];
                                                };
                                            };
                                            $44.renderPaused = false;
                                            return $44;
                                        })(ref))(function () {
                                            return flushRender(ref);
                                        });
                                    });
                                });
                            });
                        });
                    };
                    throw new Error("Failed pattern match at Halogen.Driver line 161, column 5 - line 177, column 24: " + [ v.renderPaused.constructor.name ]);
                });
            };
            var flushRender = Control_Monad_Rec_Class.tailRecM(Control_Monad_Aff.monadRecAff)(function (ref) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)(v))(function () {
                        var $47 = !v.renderPending;
                        if ($47) {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Either.Right(Data_Unit.unit));
                        };
                        if (!$47) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(render(ref))(function () {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Either.Left(ref));
                            });
                        };
                        throw new Error("Failed pattern match at Halogen.Driver line 183, column 5 - line 187, column 24: " + [ $47.constructor.name ]);
                    });
                });
            });
            var $$eval = function (ref) {
                return function (rpRef) {
                    return function (h) {
                        if (h instanceof Halogen_Query_HalogenF.StateHF) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
                                if (h.value0 instanceof Halogen_Query_StateF.Get) {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)(v))(function () {
                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value0.value0(v.state));
                                    });
                                };
                                if (h.value0 instanceof Halogen_Query_StateF.Modify) {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v1) {
                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff_AVar.putVar(ref))((function () {
                                            var $53 = {};
                                            for (var $54 in v) {
                                                if (v.hasOwnProperty($54)) {
                                                    $53[$54] = v[$54];
                                                };
                                            };
                                            $53.state = h.value0.value0(v.state);
                                            return $53;
                                        })()))(function () {
                                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff_AVar.putVar(rpRef))(new Data_Maybe.Just(Halogen_Query_HalogenF.Pending.value)))(function () {
                                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value0.value1);
                                            });
                                        });
                                    });
                                };
                                throw new Error("Failed pattern match at Halogen.Driver line 107, column 9 - line 115, column 22: " + [ h.value0.constructor.name ]);
                            });
                        };
                        if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
                            var producer = Halogen_Query_EventSource.runEventSource(h.value0);
                            var consumer = Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Bind.bindFlipped(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(function ($72) {
                                return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(driver(ref)($72));
                            })(Control_Coroutine["await"](Control_Monad_Aff.monadAff)));
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAff)(Control_Coroutine_Stalling_1.runStallingProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine_Stalling_1.fuse(Control_Monad_Aff.monadRecAff)(producer)(consumer))))(function () {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
                            });
                        };
                        if (h instanceof Halogen_Query_HalogenF.RenderHF) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(Data_Function["const"](h.value0))(rpRef))(function () {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isNothing(h.value0)))(render(ref)))(function () {
                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
                                });
                            });
                        };
                        if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(rpRef)(v))(function () {
                                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(h.value0(v));
                                });
                            });
                        };
                        if (h instanceof Halogen_Query_HalogenF.QueryHF) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isJust(v)))(render(ref)))(function () {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(rpRef)(Data_Maybe.Nothing.value))(function () {
                                        return h.value0;
                                    });
                                });
                            });
                        };
                        if (h instanceof Halogen_Query_HalogenF.HaltHF) {
                            return Control_Plus.empty(Control_Monad_Aff.plusAff);
                        };
                        throw new Error("Failed pattern match at Halogen.Driver line 104, column 5 - line 134, column 22: " + [ h.constructor.name ]);
                    };
                };
            };
            var driver = function (ref) {
                return function (q) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](Data_Maybe.Nothing.value))(function (v) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Free.runFreeM(Halogen_Query_HalogenF.functorHalogenF(Control_Monad_Aff.functorAff))(Control_Monad_Aff.monadRecAff)($$eval(ref)(v))(Halogen_Component.queryComponent(c)(q)))(function (v1) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v2) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isJust(v2)))(render(ref)))(function () {
                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1);
                                });
                            });
                        });
                    });
                };
            };
            return Data_Functor.map(Control_Monad_Aff.functorAff)(function (v) {
                return v.driver;
            })(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v) {
                var rc = Halogen_Component.renderComponent(c)(s);
                var dr = driver(v);
                var vtree = Halogen_HTML_Renderer_VirtualDOM.renderTree(dr)(rc.tree);
                var node = Halogen_Internal_VirtualDOM.createElement(vtree);
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)({
                    node: node, 
                    vtree: vtree, 
                    state: rc.state, 
                    renderPending: false, 
                    renderPaused: true
                }))(function () {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(DOM_Node_Node.appendChild(DOM_HTML_Types.htmlElementToNode(node))(DOM_HTML_Types.htmlElementToNode(element))))(function () {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onInitializers(Data_Foldable.foldableArray)(dr)(rc.hooks)))(function () {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAff)(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(dr)(Halogen_Component.initializeComponent(c))))(function () {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(function (v1) {
                                    var $70 = {};
                                    for (var $71 in v1) {
                                        if (v1.hasOwnProperty($71)) {
                                            $70[$71] = v1[$71];
                                        };
                                    };
                                    $70.renderPaused = false;
                                    return $70;
                                })(v))(function () {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(flushRender(v))(function () {
                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                                            driver: dr
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            }));
        };
    };
};
module.exports = {
    runUI: runUI
};
