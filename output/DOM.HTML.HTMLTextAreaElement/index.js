// Generated by psc version 0.9.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Nullable = require("../Data.Nullable");
var DOM = require("../DOM");
var DOM_HTML_SelectionMode = require("../DOM.HTML.SelectionMode");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
module.exports = {
    autocomplete: $foreign.autocomplete, 
    autofocus: $foreign.autofocus, 
    checkValidity: $foreign.checkValidity, 
    cols: $foreign.cols, 
    defaultValue: $foreign.defaultValue, 
    dirName: $foreign.dirName, 
    disabled: $foreign.disabled, 
    form: $foreign.form, 
    labels: $foreign.labels, 
    maxLength: $foreign.maxLength, 
    minLength: $foreign.minLength, 
    name: $foreign.name, 
    placeholder: $foreign.placeholder, 
    readOnly: $foreign.readOnly, 
    required: $foreign.required, 
    rows: $foreign.rows, 
    select: $foreign.select, 
    selectionDirection: $foreign.selectionDirection, 
    selectionEnd: $foreign.selectionEnd, 
    selectionStart: $foreign.selectionStart, 
    setAutocomplete: $foreign.setAutocomplete, 
    setAutofocus: $foreign.setAutofocus, 
    setCols: $foreign.setCols, 
    setCustomValidity: $foreign.setCustomValidity, 
    setDefaultValue: $foreign.setDefaultValue, 
    setDirName: $foreign.setDirName, 
    setDisabled: $foreign.setDisabled, 
    setMaxLength: $foreign.setMaxLength, 
    setMinLength: $foreign.setMinLength, 
    setName: $foreign.setName, 
    setPlaceholder: $foreign.setPlaceholder, 
    setRangeText: $foreign.setRangeText, 
    "setRangeText'": $foreign["setRangeText'"], 
    setReadOnly: $foreign.setReadOnly, 
    setRequired: $foreign.setRequired, 
    setRows: $foreign.setRows, 
    setSelectionDirection: $foreign.setSelectionDirection, 
    setSelectionEnd: $foreign.setSelectionEnd, 
    setSelectionRange: $foreign.setSelectionRange, 
    setSelectionStart: $foreign.setSelectionStart, 
    setValue: $foreign.setValue, 
    setWrap: $foreign.setWrap, 
    textLength: $foreign.textLength, 
    type_: $foreign.type_, 
    validationMessage: $foreign.validationMessage, 
    validity: $foreign.validity, 
    value: $foreign.value, 
    willValidate: $foreign.willValidate, 
    wrap: $foreign.wrap
};
