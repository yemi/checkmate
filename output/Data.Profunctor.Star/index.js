// Generated by psc version 0.9.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Distributive = require("../Data.Distributive");
var Data_Either = require("../Data.Either");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Applicative = require("../Control.Applicative");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Data_Function = require("../Data.Function");
var Star = function (x) {
    return x;
};
var unStar = function (v) {
    return v;
};
var semigroupoidStar = function (dictBind) {
    return new Control_Semigroupoid.Semigroupoid(function (v) {
        return function (v1) {
            return function (x) {
                return Control_Bind.bind(dictBind)(v1(x))(v);
            };
        };
    });
};
var profunctorStar = function (dictFunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($72) {
                    return Data_Functor.map(dictFunctor)(g)(v(f($72)));
                };
            };
        };
    });
};
var strongStar = function (dictFunctor) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorStar(dictFunctor);
    }, function (v) {
        return function (v1) {
            return Data_Functor.map(dictFunctor)(function (v2) {
                return new Data_Tuple.Tuple(v2, v1.value1);
            })(v(v1.value0));
        };
    }, function (v) {
        return function (v1) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
        };
    });
};
var invariantStar = function (dictInvariant) {
    return new Data_Functor_Invariant.Invariant(function (f) {
        return function (g) {
            return function (v) {
                return function ($73) {
                    return Data_Functor_Invariant.imap(dictInvariant)(f)(g)(v($73));
                };
            };
        };
    });
};
var functorStar = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function ($74) {
                return Data_Functor.map(dictFunctor)(f)(v($74));
            };
        };
    });
};
var distributiveStar = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorStar(dictDistributive["__superclass_Data.Functor.Functor_0"]());
    }, function (dictFunctor) {
        return function (f) {
            return function ($75) {
                return Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($75));
            };
        };
    }, function (dictFunctor) {
        return function (f) {
            return function (a) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function ($76) {
                    return (function (v) {
                        return Data_Function.apply(v)(a);
                    })(unStar($76));
                })(f);
            };
        };
    });
};
var closedStar = function (dictDistributive) {
    return new Data_Profunctor_Closed.Closed(function () {
        return profunctorStar(dictDistributive["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (g) {
            return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function ($77) {
                return v(g($77));
            });
        };
    });
};
var choiceStar = function (dictApplicative) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorStar((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return Data_Function.apply(Star)(Data_Either.either(function ($78) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(v($78));
        })(function ($79) {
            return Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($79));
        }));
    }, function (v) {
        return Data_Function.apply(Star)(Data_Either.either(function ($80) {
            return Control_Applicative.pure(dictApplicative)(Data_Either.Left.create($80));
        })(function ($81) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(v($81));
        }));
    });
};
var categoryStar = function (dictMonad) {
    return new Control_Category.Category(function () {
        return semigroupoidStar(dictMonad["__superclass_Control.Bind.Bind_1"]());
    }, Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
};
var applyStar = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorStar(dictApply["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return function (a) {
                return Control_Apply.apply(dictApply)(v(a))(v1(a));
            };
        };
    });
};
var bindStar = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyStar(dictBind["__superclass_Control.Apply.Apply_0"]());
    }, function (v) {
        return function (f) {
            return function (x) {
                return Control_Bind.bind(dictBind)(v(x))(function (a) {
                    return unStar(f(a))(x);
                });
            };
        };
    });
};
var applicativeStar = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyStar(dictApplicative["__superclass_Control.Apply.Apply_0"]());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
var monadStar = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeStar(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
    }, function () {
        return bindStar(dictMonad["__superclass_Control.Bind.Bind_1"]());
    });
};
var altStar = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorStar(dictAlt["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return function (a) {
                return Control_Alt.alt(dictAlt)(v(a))(v1(a));
            };
        };
    });
};
var plusStar = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altStar(dictPlus["__superclass_Control.Alt.Alt_0"]());
    }, function (v) {
        return Control_Plus.empty(dictPlus);
    });
};
var alternativeStar = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeStar(dictAlternative["__superclass_Control.Applicative.Applicative_0"]());
    }, function () {
        return plusStar(dictAlternative["__superclass_Control.Plus.Plus_1"]());
    });
};
var monadZeroStar = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeStar(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadStar(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
    });
};
var monadPlusStar = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroStar(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
    });
};
module.exports = {
    Star: Star, 
    unStar: unStar, 
    semigroupoidStar: semigroupoidStar, 
    categoryStar: categoryStar, 
    functorStar: functorStar, 
    invariantStar: invariantStar, 
    applyStar: applyStar, 
    applicativeStar: applicativeStar, 
    bindStar: bindStar, 
    monadStar: monadStar, 
    altStar: altStar, 
    plusStar: plusStar, 
    alternativeStar: alternativeStar, 
    monadZeroStar: monadZeroStar, 
    monadPlusStar: monadPlusStar, 
    distributiveStar: distributiveStar, 
    profunctorStar: profunctorStar, 
    strongStar: strongStar, 
    choiceStar: choiceStar, 
    closedStar: closedStar
};
